'use strict';

/**
 * @see https://github.com/jsx-eslint/eslint-plugin-react#list-of-supported-rules
 * @type {import('eslint').Linter.RulesRecord}
 */
module.exports = {
  'react/boolean-prop-naming': [
    'warn',
    {
      propTypeNames: ['bool'],
      rule: '^(is|has)[A-Z]([A-Za-z0-9]?)+',
      message:
        'It is better if your prop ({{ propName }}) matches this pattern: ({{ pattern }})',
      validateNested: true,
    },
  ],
  'react/button-has-type': [
    'error',
    {
      button: true,
      submit: true,
      reset: true,
    },
  ],
  'react/default-props-match-prop-types': [
    'error',
    { allowRequiredDefaults: false },
  ],
  'react/destructuring-assignment': [
    'error',
    'always',
    { ignoreClassFields: false, destructureInSignature: 'ignore' },
  ],
  'react/forbid-component-props': 'off',
  'react/forbid-dom-props': 'off',
  'react/forbid-elements': 'off',
  'react/forbid-foreign-prop-types': 'off',
  'react/forbid-prop-types': ['error', { allowInPropTypes: true }],
  'react/function-component-definition': 'off',
  'react/hook-use-state': ['error', { allowDestructuredState: false }],
  'react/iframe-missing-sandbox': 'warn',
  'react/jsx-boolean-value': 'off',
  'react/jsx-child-element-spacing': 'warn',
  'react/jsx-closing-bracket-location': ['error', 'tag-aligned'],
  'react/jsx-closing-tag-location': 'error',
  'react/jsx-curly-brace-presence': [
    'warn',
    { children: 'ignore', propElementValues: 'always', props: 'never' },
  ],
  'react/jsx-curly-newline': 'off',
  'react/jsx-curly-spacing': 'off',
  'react/jsx-equals-spacing': ['warn', 'never'],
  'react/jsx-filename-extension': [
    'error',
    { allow: 'as-needed', extensions: ['.jsx'] },
  ],
  'react/jsx-first-prop-new-line': 'off',
  'react/jsx-fragments': ['error', 'syntax'],
  'react/jsx-handler-names': 'off',
  'react/jsx-indent': 'off',
  'react/jsx-indent-props': 'off',
  'react/jsx-key': [
    'error',
    {
      checkFragmentShorthand: true,
      checkKeyMustBeforeSpread: false,
      warnOnDuplicates: true,
    },
  ],
  'react/jsx-max-depth': 'off',
  'react/jsx-max-props-per-line': 'off',
  'react/jsx-newline': 'off',
  'react/jsx-no-bind': [
    'error',
    {
      ignoreDOMComponents: false,
      ignoreRefs: false,
      allowArrowFunctions: false,
      allowFunctions: false,
      allowBind: false,
    },
  ],
  'react/jsx-no-constructed-context-values': 'error',
  'react/jsx-no-leaked-render': [
    'error',
    { validStrategies: ['ternary', 'coerce'] },
  ],
  'react/jsx-no-literals': [
    'warn',
    {
      allowedStrings: ['button', 'reset', 'submit'],
      ignoreProps: false,
      noAttributeStrings: true,
      noStrings: true,
    },
  ],
  'react/jsx-no-script-url': 'error',
  'react/jsx-no-useless-fragment': ['warn', { allowExpressions: true }],
  'react/jsx-one-expression-per-line': 'off',
  'react/jsx-pascal-case': [
    'error',
    {
      allowAllCaps: false,
      allowLeadingUnderscore: false,
      allowNamespace: false,
    },
  ],
  'react/jsx-props-no-multi-spaces': 'off',
  'react/jsx-props-no-spreading': 'off',
  'react/jsx-sort-props': 'off',
  'react/jsx-tag-spacing': 'off',
  // cspell:disable-next-line
  'react/no-access-state-in-setstate': 'error',
  'react/no-adjacent-inline-elements': 'off',
  'react/no-array-index-key': 'warn',
  'react/no-arrow-function-lifecycle': 'error',
  'react/no-danger': 'warn',
  'react/no-did-mount-set-state': 'error',
  'react/no-did-update-set-state': 'error',
  'react/no-invalid-html-attribute': 'error',
  'react/no-multi-comp': 'off',
  'react/no-namespace': 'error',
  'react/no-object-type-as-default-prop': 'error',
  'react/no-redundant-should-component-update': 'error',
  'react/no-set-state': 'off',
  'react/no-this-in-sfc': 'error',
  'react/no-typos': 'error',
  'react/no-unsafe': 'warn',
  'react/no-unstable-nested-components': ['error', { allowAsProps: true }],
  'react/no-unused-class-component-methods': 'error',
  'react/no-unused-prop-types': ['error', { skipShapeProps: true }],
  'react/no-unused-state': 'error',
  'react/no-will-update-set-state': 'error',
  'react/prefer-es6-class': 'off',
  'react/prefer-exact-props': 'off',
  'react/prefer-read-only-props': 'off',
  'react/prefer-stateless-function': 'off',
  'react/require-default-props': 'off',
  'require-optimization': 'off',
  'react/self-closing-comp': [
    'error',
    {
      component: true,
      html: true,
    },
  ],
  'react/sort-comp': 'off',
  'react/sort-default-props': 'off',
  'react/sort-prop-types': 'off',
  'react/state-in-constructor': 'off',
  'react/static-property-placement': 'off',
  'react/style-prop-object': 'error',
  'react/void-dom-elements-no-children': 'error',
};
