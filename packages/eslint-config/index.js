'use strict';

/** @type {import('eslint').ESLint.ConfigData}  */
module.exports = {
  env: {
    browser: true,
    es6: true,
    node: true,
  },
  extends: ['eslint:recommended', 'plugin:import/recommended'],
  plugins: ['import'],
  settings: {
    'import/extensions': ['.js'],
    'import/ignore': ['node_modules', '.json$', '.(scss|less|css)$'],
    'import/resolver': {
      node: true,
    },
  },
  rules: {
    'accessor-pairs': [
      'error',
      {
        getWithoutSet: false,
        setWithoutGet: true,
        enforceForClassMembers: true,
      },
    ],
    'array-callback-return': [
      'error',
      { allowImplicit: false, checkForEach: true },
    ],
    'arrow-body-style': [
      'error',
      'as-needed',
      { requireReturnForObjectLiteral: true },
    ],
    'block-scoped-var': 'error',
    // cspell:disable-next-line
    camelcase: [
      'error',
      {
        properties: 'always',
        ignoreDestructuring: false,
        ignoreImports: false,
        ignoreGlobals: true,
      },
    ],
    'capitalized-comments': 'off', // too many allowed patterns...
    'class-methods-use-this': 'off',
    complexity: ['error', { max: 20 }],
    'consistent-return': ['error', { treatUndefinedAsUnspecified: false }],
    'consistent-this': 'off',
    curly: ['error', 'multi'],
    'default-case': 'error',
    'default-case-last': 'error',
    'default-param-last': 'error',
    'dot-notation': ['error', { allowKeywords: false }],
    eqeqeq: ['error', 'always', { null: 'always' }],
    'func-name-matching': ['error', 'always'],
    'func-names': ['error', 'always'],
    'func-style': ['error', 'declaration', { allowArrowFunctions: true }],
    'grouped-accessor-pairs': ['error', 'anyOrder'],
    'guard-for-in': 'error',
    'id-denylist': 'off',
    'id-length': 'off',
    'id-match': 'off',
    'init-declarations': ['error', 'always'],
    'logical-assignment-operators': 'off',
    'max-classes-per-file': 'off',
    'max-depth': ['error', { max: 4 }],
    'max-lines': [
      'warn',
      { max: 500, skipBlankLines: true, skipComments: true },
    ],
    'max-lines-per-function': 'off',
    'max-nested-callbacks': ['error', { max: 10 }],
    'max-params': ['error', { max: 3 }],
    'max-statements': ['error', { max: 10 }],
    'multiline-comment-style': ['error', 'starred-block'],
    'new-cap': ['error', { capIsNew: true, newIsCap: true, properties: true }],
    'no-alert': 'error',
    'no-array-constructor': 'error',
    'no-await-in-loop': 'error',
    'no-bitwise': 'error',
    'no-caller': 'error',
    'no-confusing-arrow': [
      'error',
      { allowParens: false, onlyOneSimpleParam: false },
    ],
    'no-console': 'off',
    'no-constant-binary-expression': 'error',
    'no-constructor-return': 'error',
    'no-continue': 'off',
    'no-div-regex': 'error',
    'no-duplicate-imports': ['error', { includeExports: false }],
    'no-else-return': ['error', { allowElseIf: false }],
    'no-empty-function': 'error',
    'no-empty-static-block': 'error',
    'no-eq-null': 'error',
    'no-eval': 'error',
    'no-extend-native': 'error',
    'no-extra-bind': 'error',
    'no-extra-label': 'error',
    'no-floating-decimal': 'error',
    'no-implicit-coercion': [
      'error',
      {
        boolean: false,
        number: true,
        string: true,
        disallowTemplateShorthand: false,
      },
    ],
    'no-implicit-globals': 'error',
    'no-implied-eval': 'error',
    'no-inline-comments': 'off',
    'no-invalid-this': ['error', { capIsConstructor: true }],
    'no-iterator': 'error',
    'no-label-var': 'error',
    'no-labels': ['error', { allowLoop: false, allowSwitch: false }],
    'no-lone-blocks': 'error',
    'no-lonely-if': 'error',
    'no-loop-func': 'error',
    'no-magic-numbers': [
      'error',
      {
        detectObjects: false,
        enforceConst: false,
        ignoreArrayIndexes: false,
        ignoreClassFieldInitialValues: true,
        ignoreDefaultValues: true,
      },
    ],
    'no-mixed-operators': 'off',
    'no-multi-assign': ['error', { ignoreNonDeclaration: false }],
    'no-multi-str': 'error',
    'no-negated-condition': 'error',
    'no-nested-ternary': 'off',
    'no-new': 'error',
    'no-new-func': 'error',
    // cspell:disable-next-line
    'no-new-native-nonconstructor': 'error',
    'no-new-object': 'error',
    'no-new-wrappers': 'error',
    'no-octal-escape': 'error',
    'no-param-reassign': ['error', { props: false }],
    // cspell:disable-next-line
    'no-plusplus': 'off',
    'no-promise-executor-return': 'error',
    'no-proto': 'error',
    'no-restricted-exports': 'off',
    // cspell:disable-next-line
    'no-restricted-globals': ['error', 'event', 'fdescribe'],
    'no-restricted-imports': 'off',
    'no-restricted-properties': 'off',
    'no-restricted-syntax': ['error', 'WithStatement'],
    'no-return-assign': ['error', 'always'],
    'no-return-await': 'error',
    'no-script-url': 'error',
    'no-self-compare': 'error',
    'no-sequences': ['error', { allowInParentheses: true }],
    'no-shadow': [
      'error',
      {
        builtinGlobals: true,
        hoist: 'functions',
        allow: [],
        ignoreOnInitialization: false,
      },
    ],
    'no-template-curly-in-string': 'error',
    'no-ternary': 'off',
    'no-throw-literal': 'error',
    'no-undef-init': 'error',
    'no-underscore-dangle': 'off',
    'no-unmodified-loop-condition': 'error',
    'no-unneeded-ternary': ['error', { defaultAssignment: false }],
    'no-unreachable-loop': 'error',
    'no-unused-expressions': [
      'error',
      {
        allowShortCircuit: false,
        allowTernary: false,
        allowTaggedTemplates: false,
        enforceForJSX: true,
      },
    ],
    'no-unused-private-class-members': 'error',
    'no-unused-vars': ['error', { argsIgnorePattern: '^_' }],
    'no-use-before-define': [
      'error',
      {
        functions: true,
        classes: true,
        variables: true,
        allowNamedExports: false,
      },
    ],
    'no-useless-call': 'error',
    'no-useless-computed-key': ['error', { enforceForClassMembers: true }],
    'no-useless-concat': 'error',
    'no-useless-constructor': 'error',
    'no-useless-rename': [
      'error',
      { ignoreImport: false, ignoreExport: false, ignoreDestructuring: false },
    ],
    'no-useless-return': 'error',
    'no-var': 'error',
    'no-void': 'off',
    'no-warning-comments': [
      'error',
      { location: 'anywhere', terms: ['fixme'] },
    ],
    'object-shorthand': ['error', 'properties'],
    'one-var': ['error', 'never'],
    'one-var-declaration-per-line': 'off',
    'operator-assignment': 'off',
    'prefer-arrow-callback': [
      'error',
      { allowNamedFunctions: false, allowUnboundThis: true },
    ],
    'prefer-const': [
      'error',
      { destructuring: 'any', ignoreReadBeforeAssign: false },
    ],
    'prefer-destructuring': [
      'error',
      {
        array: false,
        object: true,
      },
      {
        enforceForRenamedProperties: false,
      },
    ],
    'prefer-exponentiation-operator': 'off',
    'prefer-named-capture-group': 'error',
    'prefer-numeric-literals': 'off',
    'prefer-object-has-own': 'error',
    'prefer-object-spread': 'error',
    'prefer-promise-reject-errors': ['error', { allowEmptyReject: false }],
    'prefer-regex-literals': ['error', { disallowRedundantWrapping: true }],
    'prefer-rest-params': 'error',
    'prefer-spread': 'error',
    'prefer-template': 'error',
    'quote-props': [
      'error',
      'as-needed',
      { keywords: false, numbers: true, unnecessary: true },
    ],
    radix: ['error', 'always'],
    'require-atomic-updates': ['error', { allowProperties: false }],
    'require-await': 'error',
    'require-unicode-regexp': 'off',
    'sort-imports': 'off',
    'sort-keys': 'off',
    'sort-vars': 'off',
    'spaced-comment': 'off',
    strict: ['error', 'safe'],
    'symbol-description': 'error',
    'vars-on-top': 'error',
    yoda: ['error', 'never', { exceptRange: false, onlyEquality: false }],
    'import/consistent-type-specifier-style': 'off',
    'import/first': 'error',
    'import/group-exports': 'off',
    'import/max-dependencies': 'off',
    'import/newline-after-import': [
      'error',
      { considerComments: true, count: 1 },
    ],
    'import/no-absolute-path': 'error',
    'import/no-amd': 'error',
    'import/no-commonjs': 'off',
    'import/no-cycle': 'off', // too slow
    'import/no-default-export': 'off',
    'import/no-deprecated': 'warn',
    'import/no-duplicates': [
      'error',
      { considerQueryString: true, 'prefer-inline': true },
    ],
    'import/no-dynamic-require': 'off',
    'import/no-empty-named-blocks': 'error',
    'import/no-extraneous-dependencies': [
      'error',
      {
        devDependencies: [
          '**/.storybook/**',
          '**/tests/**',
          '**/rollup.config.{cjs,mjs,js,cts,mts,ts}',
          '**/vitest.config.{cjs,mjs,js,cts,mts,ts}',
          '**/*.stories.{cjs,mjs,js,jsx,cts,mts,ts,tsx,mdx}',
          '**/*.test.{cjs,mjs,js,jsx,cts,mts,ts,tsx}',
          '**/*.test-d.{ts,cts,mts}',
          '**/*.spec.{cjs,mjs,js,jsx,cts,mts,ts,tsx}',
        ],
        optionalDependencies: false,
        peerDependencies: false,
      },
    ],
    'import/no-import-module-exports': 'error',
    'import/no-internal-modules': 'off',
    'import/no-mutable-exports': 'error',
    'import/no-named-default': 'error',
    'import/no-named-export': 'off',
    'import/no-namespace': 'off',
    'import/no-nodejs-modules': 'off',
    'import/no-relative-packages': 'off',
    'import/no-relative-parent-imports': 'off',
    'import/no-restricted-paths': 'off',
    'import/no-self-import': 'error',
    'import/no-unassigned-import': 'off',
    'import/no-unused-modules': 'off', // does not support module.exports
    'import/no-useless-path-segments': [
      'error',
      {
        noUselessIndex: true,
      },
    ],
    'import/no-webpack-loader-syntax': 'error',
    'import/order': [
      'error',
      { alphabetize: { order: 'asc', caseInsensitive: true } },
    ],
    'import/prefer-default-export': 'off',
    'import/unambiguous': 'error',
  },
  overrides: [
    {
      files: ['*.ts', '*.tsx', '.mts', '.cts'],
      extends: [
        'plugin:@typescript-eslint/recommended',
        'plugin:@typescript-eslint/recommended-requiring-type-checking',
        'plugin:import/typescript',
      ],
      plugins: ['@typescript-eslint'],
      parserOptions: {
        ecmaVersion: 'latest',
        project: true,
        sourceType: 'module',
        warnOnUnsupportedTypeScriptVersion: true,
      },
      settings: {
        'import/extensions': ['.js', '.ts'],
        'import/parsers': {
          '@typescript-eslint/parser': ['.ts'],
        },
        'import/resolver': {
          node: true,
          typescript: {
            alwaysTryTypes: true,
          },
        },
      },
      rules: {
        '@typescript-eslint/array-type': [
          'error',
          { default: 'array-simple', readonly: 'array-simple' },
        ],
        '@typescript-eslint/class-literal-property-style': 'off',
        '@typescript-eslint/consistent-generic-constructors': 'off',
        '@typescript-eslint/consistent-indexed-object-style': 'off',
        '@typescript-eslint/consistent-type-assertions': 'off',
        '@typescript-eslint/consistent-type-definitions': ['error', 'type'],
        '@typescript-eslint/consistent-type-exports': [
          'error',
          { fixMixedExportsWithInlineTypeSpecifier: false },
        ],
        '@typescript-eslint/consistent-type-imports': [
          'error',
          {
            prefer: 'type-imports',
            fixStyle: 'inline-type-imports',
            disallowTypeAnnotations: true,
          },
        ],
        '@typescript-eslint/explicit-function-return-type': 'off',
        '@typescript-eslint/explicit-member-accessibility': [
          'error',
          {
            accessibility: 'explicit',
            overrides: {
              accessors: 'explicit',
              constructors: 'no-public',
              methods: 'explicit',
              properties: 'explicit',
              parameterProperties: 'no-public',
            },
          },
        ],
        '@typescript-eslint/explicit-module-boundary-types': 'off',
        '@typescript-eslint/member-delimiter-style': 'off',
        '@typescript-eslint/member-ordering': 'off',
        '@typescript-eslint/method-signature-style': ['error', 'property'],
        '@typescript-eslint/naming-convention': 'off',
        '@typescript-eslint/no-base-to-string': 'warn',
        '@typescript-eslint/no-confusing-non-null-assertion': 'off',
        '@typescript-eslint/no-confusing-void-expression': [
          'error',
          { ignoreArrowShorthand: true, ignoreVoidOperator: true },
        ],
        '@typescript-eslint/no-duplicate-enum-values': 'warn',
        '@typescript-eslint/no-dynamic-delete': 'error',
        '@typescript-eslint/no-extraneous-class': 'error',
        '@typescript-eslint/no-import-type-side-effects': 'error',
        '@typescript-eslint/no-invalid-void-type': [
          'warn',
          { allowInGenericTypeArguments: true, allowAsThisParameter: false },
        ],
        '@typescript-eslint/no-meaningless-void-operator': [
          'warn',
          { checkNever: true },
        ],
        '@typescript-eslint/no-mixed-enums': 'error',
        '@typescript-eslint/no-non-null-asserted-nullish-coalescing': 'error',
        '@typescript-eslint/no-redundant-type-constituents': 'error',
        '@typescript-eslint/no-require-imports': 'error',
        '@typescript-eslint/no-type-alias': 'off',
        '@typescript-eslint/no-unnecessary-boolean-literal-compare': [
          'warn',
          {
            allowComparingNullableBooleansToTrue: true,
            allowComparingNullableBooleansToFalse: true,
          },
        ],
        '@typescript-eslint/no-unnecessary-condition': [
          'error',
          {
            allowConstantLoopConditions: false,
            allowRuleToRunWithoutStrictNullChecksIKnowWhatIAmDoing: false,
          },
        ],
        '@typescript-eslint/no-unnecessary-qualifier': 'warn',
        '@typescript-eslint/no-unnecessary-type-arguments': 'warn',
        '@typescript-eslint/no-unsafe-declaration-merging': 'error',
        '@typescript-eslint/no-useless-empty-export': 'error',
        '@typescript-eslint/non-nullable-type-assertion-style': 'off',
        '@typescript-eslint/parameter-properties': 'off',
        '@typescript-eslint/prefer-enum-initializers': 'error',
        '@typescript-eslint/prefer-for-of': 'warn',
        '@typescript-eslint/prefer-function-type': 'error',
        '@typescript-eslint/prefer-includes': 'warn',
        '@typescript-eslint/prefer-literal-enum-member': [
          'error',
          { allowBitwiseExpressions: false },
        ],
        '@typescript-eslint/prefer-nullish-coalescing': [
          'error',
          {
            ignoreConditionalTests: true,
            ignoreTernaryTests: true,
            ignoreMixedLogicalExpressions: true,
            allowRuleToRunWithoutStrictNullChecksIKnowWhatIAmDoing: false,
          },
        ],
        '@typescript-eslint/prefer-optional-chain': 'error',
        '@typescript-eslint/prefer-readonly': 'off',
        '@typescript-eslint/prefer-readonly-parameter-types': 'off',
        '@typescript-eslint/prefer-reduce-type-parameter': 'warn',
        '@typescript-eslint/prefer-regexp-exec': 'off',
        '@typescript-eslint/prefer-return-this-type': 'off',
        '@typescript-eslint/prefer-string-starts-ends-with': 'error',
        '@typescript-eslint/prefer-ts-expect-error': 'error',
        '@typescript-eslint/promise-function-async': [
          'error',
          {
            allowAny: true,
            allowedPromiseNames: [],
            checkArrowFunctions: true,
            checkFunctionDeclarations: true,
            checkFunctionExpressions: true,
            checkMethodDeclarations: true,
          },
        ],
        '@typescript-eslint/require-array-sort-compare': [
          'warn',
          { ignoreStringArrays: false },
        ],
        '@typescript-eslint/sort-type-constituents': 'off',
        '@typescript-eslint/strict-boolean-expressions': 'off',
        '@typescript-eslint/switch-exhaustiveness-check': 'error',
        '@typescript-eslint/typedef': 'off',
        '@typescript-eslint/unified-signatures': [
          'warn',
          { ignoreDifferentlyNamedParameters: false },
        ],
        /**
         * Typescript extension rules -- Core rules need to be disabled.
         */
        'default-param-last': 'off',
        '@typescript-eslint/default-param-last': 'error',
        'dot-notation': 'off',
        '@typescript-eslint/dot-notation': ['error', { allowKeywords: false }],
        'init-declarations': 'off',
        '@typescript-eslint/init-declarations': ['error', 'always'],
        'no-array-constructor': 'off',
        '@typescript-eslint/no-array-constructor': 'error',
        'no-empty-function': 'off',
        '@typescript-eslint/no-empty-function': 'error',
        'no-implied-eval': 'off',
        '@typescript-eslint/no-implied-eval': 'error',
        'no-invalid-this': 'off',
        '@typescript-eslint/no-invalid-this': [
          'error',
          { capIsConstructor: true },
        ],
        'no-loop-func': 'off',
        '@typescript-eslint/no-loop-func': 'error',
        'no-magic-numbers': 'off',
        '@typescript-eslint/no-magic-numbers': [
          'error',
          {
            detectObjects: false,
            enforceConst: false,
            ignoreArrayIndexes: false,
            ignoreClassFieldInitialValues: true,
            ignoreDefaultValues: true,
          },
        ],
        'no-restricted-imports': 'off',
        '@typescript-eslint/no-restricted-imports': 'off',
        'no-shadow': 'off',
        '@typescript-eslint/no-shadow': [
          'error',
          {
            builtinGlobals: true,
            hoist: 'functions',
            allow: [],
            ignoreOnInitialization: false,
          },
        ],
        'no-throw-literal': 'off',
        '@typescript-eslint/no-throw-literal': 'error',
        'no-unused-expressions': 'off',
        '@typescript-eslint/no-unused-expressions': [
          'error',
          {
            allowShortCircuit: false,
            allowTernary: false,
            allowTaggedTemplates: false,
            enforceForJSX: true,
          },
        ],
        'no-unused-vars': 'off',
        '@typescript-eslint/no-unused-vars': [
          'error',
          { argsIgnorePattern: '^_' },
        ],
        'no-use-before-define': 'off',
        '@typescript-eslint/no-use-before-define': [
          'error',
          {
            functions: true,
            classes: true,
            variables: true,
            allowNamedExports: false,
          },
        ],
        'no-useless-constructor': 'off',
        '@typescript-eslint/no-useless-constructor': 'error',
        'require-await': 'off',
        '@typescript-eslint/require-await': 'error',
        'import/consistent-type-specifier-style': ['error', 'prefer-inline'],
      },
    },
  ],
};
